name: django
secrets:
  django_secret_key:
    default: warning-override-for-production
  postgres_password:
    default: warning-override-for-production
  django_admin_email:
    default: noreply@architect.io
  django_admin_username:
    default: admin
  django_admin_password:
    default: password
  db_user:
    description: Root user to assign to the component's DB
    default: architect
  db_pass:
    description: Root password to assign to the component's DB
    default: secret
  db_name:
    description: Name of the DB the component will store content in
    default: app-db
  db_port:
    description: Port for the db
    default: 5432

services:
  app-db:
      image: postgres:12
      interfaces:
        database:
          port: ${{ secrets.db_port }}
          protocol: postgresql
      environment:
        POSTGRES_USER: ${{ secrets.db_user }}
        POSTGRES_PASSWORD: ${{ secrets.db_pass }}
        POSTGRES_DB: ${{ secrets.db_name }}
  app:
    build:
      context: .
    command: |
      sh -c '
        python manage.py makemigrations
        python manage.py collectstatic --noinput
        python manage.py migrate --noinput
        python manage.py createsuperuser --noinput
        uwsgi --http "0.0.0.0:8000" --module architectexample.wsgi:application --master --processes 4 --threads 2 --static-map /static=/src/main/app/static
      '
    interfaces:
      main: 8000
    liveness_probe:
      command: curl --fail 0.0.0.0:8000
      interval: 30s
      failure_threshold: 3
    environment:
      ALLOWED_HOST: .${{ ingresses.app.host }}
      SECRET_KEY: ${{ secrets.django_secret_key }}
      POSTGRES_DB: ${{ services.app-db.environment.POSTGRES_DB }}
      POSTGRES_USER: ${{ services.app-db.environment.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ services.app-db.environment.POSTGRES_PASSWORD }}
      POSTGRES_HOST: ${{ services.app-db.interfaces.database.host }}
      POSTGRES_PORT: ${{ services.app-db.interfaces.database.port }}
    debug:
      command: |
        sh -c '
          python manage.py makemigrations
          python manage.py collectstatic --noinput
          python manage.py migrate --noinput
          python manage.py runserver 0.0.0.0:8000
        '
      environment:
        ALLOWED_HOST: '*'
        DEBUG: 'True'
      volumes:
        app:
          host_path: .
          mount_path: /usr/src/app

interfaces:
  app:
    url: ${{ services.app.interfaces.main.url }}
    ingress:
      subdomain: app
